{"version":3,"sources":["global.js","pages/build/ShipBuildCard.tsx","pages/build/Build.tsx","pages/ship/Ship.tsx","pages/ship/ShipSearch.tsx","NavBar.tsx","pages/juust/JuustReply.tsx","pages/juust/JuustPost.tsx","pages/juust/Juustagram.tsx","Home.tsx","pages/rate/BuildRate.tsx","App.tsx","serviceWorker.js","index.js"],"names":["buildTypes","useStyles","makeStyles","theme","root","display","padding","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","sendToInfo","history","ship","splitPath","location","pathname","split","basePath","length","push","names","en","code","DisplayShipBuild","useHistory","types","availablity","construction","availableIn","i","type","limited","join","getBuildTypes","classes","Card","className","CardActionArea","onClick","CardMedia","title","src","thumbnail","CardContent","Typography","gutterBottom","variant","component","color","rarity","constructionTime","make2digits","time","timeStr2Minutes","timeStr","splitTime","parseInt","timeBetween","time1","time2","mins1","mins2","Math","abs","Build","props","state","seconds","minutes","hours","data","ships","filter","event","target","value","this","setState","output","forEach","span","sort","ship1","ship2","searchTime","hh","mm","ss","searchShip","len","filterShipBuild","Grid","container","style","item","xs","TextField","id","label","InputProps","inputProps","min","max","onChange","hourHandler","bind","fullWidth","minuteHandler","FormControl","InputLabel","Select","labelId","filterHandler","MenuItem","map","key","React","Component","layer","margin","justifyContent","section","marginBottom","main","fixSkillIconLink","shipId","link","s","parts","inject","charAt","isNaN","parseFloat","Ship","context","useContext","shipContext","useParams","name","results","byNameSearcher","search","peekShip","justify","Paper","direction","nationality","toLowerCase","jp","cn","nameSelector","skills","skill","icon","backgroundColor","kr","description","ShipSearch","useState","query","setQuery","setShips","delayedSearch","useCallback","debounce","shipList","useEffect","cancel","navbar","sendToPage","path","startsWith","NavBar","Button","JuustReply","poster","post","replies","reply","JuustPost","picSrc","picture","text","Juustagram","limit","that","Axios","get","nimi","then","resp","entries","catch","console","error","newLimit","posts","slice","loadMore","Home","chart","overflowX","chartOptions","maintainAspectRatio","scales","yAxes","scaleLabel","labelString","ticks","callback","index","values","chanceToPercent","xAxes","tooltips","callbacks","tooltipItem","datasets","datasetIndex","yLabel","chance","dp","percent","toFixed","BuildRate","pulls","setPulls","buildRate","setBuildRate","buildChance","xVals","array","Array","generateNumbers","yVals","formula","ans","applyFormula","n","rate","times","pow","labels","chartHeight","undefined","window","innerHeight","document","documentElement","clientHeight","getVH","chartWidth","innerWidth","clientWidth","getVW","Slider","aria-labelledby","valueLabelDisplay","newValue","step","marks","endAdornment","InputAdornment","position","options","createContext","searcherOptions","caseSensitive","searchByNameConfig","App","FuzzySearch","Provider","render","exact","log","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cfc2fc9a.chunk.js","sourcesContent":["export const shipInfoURL = \"https://raw.githubusercontent.com/AzurAPI/azurapi-js-setup/master/ships.json\";\r\nexport const buildTypes = [\r\n    'light',\r\n    'heavy',\r\n    'aviation',\r\n    'limited'\r\n];\r\nexport const buildTypeName = {\r\n    light: 'light',\r\n    heavy: 'heavy',\r\n    aviation: 'special',\r\n    special: 'aviation',\r\n    limited: 'event',\r\n    event: 'limited'\r\n};\r\nexport const nimi = \"https://nimii.now.sh/api/\";\r\nexport const nimiShips = nimi + 'ships/';\r\nexport const nimiSocial = nimi + \"social/\";","import React from 'react';\r\nimport { buildTypes } from '../../global';\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Ship } from '../../types/shipTypes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        padding: '5%',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        width: 151,\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n        height: 38,\r\n        width: 38,\r\n    },\r\n}));\r\n\r\nfunction getBuildTypes(ship) {\r\n    let types = [];\r\n    const availablity = ship.construction.availableIn;\r\n    for (let i = 0; i < buildTypes.length; i++) {\r\n        const type = buildTypes[i];\r\n        if (availablity[type]) {\r\n            if (type == 'limited') {\r\n                types.push(availablity.limited);\r\n            } else if (type == 'aviation') {\r\n                types.push('special');\r\n            } else {\r\n                types.push(type);\r\n            }\r\n        }\r\n    }\r\n    return types.join(', ');\r\n}\r\n\r\nconst shipPath: string = '/ship/';\r\n\r\nfunction sendToInfo(history, ship: Ship) {\r\n    const currentPath: string = history.location.pathname;\r\n    const splitPath: string[] = currentPath.split(shipPath);\r\n    const basePath = splitPath[0];\r\n    if(splitPath.length <= 1 || !basePath){\r\n        return () => history.push(`${shipPath}${ship.names.en}/${ship.names.code}`);\r\n    } else {\r\n        return () => history.push(`${basePath}${shipPath}${ship.names.en}/${ship.names.code}`);\r\n    }\r\n}\r\n\r\nfunction DisplayShipBuild({ ship }) {\r\n    const history = useHistory();\r\n    const types = getBuildTypes(ship);\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea\r\n                className={classes.details}\r\n                onClick={sendToInfo(history, ship)}\r\n            >\r\n                <CardMedia title={ship.names.code}>\r\n                    <img src={ship.thumbnail} width=\"166px\" height=\"166px\" />\r\n                </CardMedia>\r\n                <CardContent className={classes.content}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {ship.names.en}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textSecondary\"\r\n                        component=\"h4\"\r\n                    >\r\n                        {ship.rarity}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" component=\"h4\">\r\n                        {types}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" component=\"h5\">\r\n                        {ship.construction.constructionTime}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default DisplayShipBuild;\r\n","import React from \"react\";\r\nimport { buildTypes, buildTypeName } from \"../../global\";\r\nimport {\r\n  TextField,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  FormControl,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport DisplayShipBuild from \"./ShipBuildCard\";\r\nimport { Ship } from \"../../types/shipTypes\";\r\n\r\nconst searchSpan = 5;\r\n\r\ntype Props = {\r\n  ships: Array<Ship>;\r\n};\r\n\r\nclass Build extends React.Component<Props, any, any> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 0,\r\n      minutes: 0,\r\n      hours: 0,\r\n      data: props.ships,\r\n      filter: \"none\",\r\n    };\r\n  }\r\n\r\n  hourHandler(event) {\r\n    let time = event.target.value;\r\n    if (!time) {\r\n      time = 0;\r\n    }\r\n    this.setState({\r\n      hours: time,\r\n    });\r\n  }\r\n\r\n  minuteHandler(event) {\r\n    let time = event.target.value;\r\n    if (!time) {\r\n      time = 0;\r\n    }\r\n    this.setState({\r\n      minutes: time,\r\n    });\r\n  }\r\n\r\n  secondHandler(event) {\r\n    let time = event.target.value;\r\n    if (!time) {\r\n      time = 0;\r\n    }\r\n    this.setState({\r\n      seconds: time,\r\n    });\r\n  }\r\n\r\n  filterHandler(event) {\r\n    let filter = event.target.value;\r\n    this.setState({\r\n      filter: filter,\r\n    });\r\n  }\r\n\r\n  searchShip(timeStr: string) {\r\n    const output = [];\r\n    this.state.data.forEach((ship) => {\r\n      const constructionTime = ship.construction.constructionTime;\r\n      if (isTimeWithin(timeStr, constructionTime, searchSpan)) {\r\n        output.push(ship);\r\n      }\r\n    });\r\n    output.sort((ship1, ship2) => {\r\n      const ship1diff = timeBetween(\r\n        ship1.construction.constructionTime,\r\n        timeStr\r\n      );\r\n      const ship2diff = timeBetween(\r\n        ship2.construction.constructionTime,\r\n        timeStr\r\n      );\r\n      return ship1diff - ship2diff;\r\n    });\r\n    return output;\r\n  }\r\n\r\n  render() {\r\n    let ships = [];\r\n\r\n    if (this.state.data) {\r\n      const searchTime = constructionTime(\r\n        this.state.hours,\r\n        this.state.minutes,\r\n        this.state.seconds\r\n      );\r\n      if (searchTime != \"00:00:00\") {\r\n        ships = this.searchShip(searchTime);\r\n      }\r\n      const filter = this.state.filter;\r\n      switch (filter) {\r\n        case \"light\":\r\n        case \"heavy\":\r\n        case \"aviation\":\r\n        case \"limited\":\r\n          ships = filterShipBuild(ships, filter);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Enter build time</h1>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          style={{\r\n            paddingLeft: \"5%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              id=\"build-hours\"\r\n              label=\"Hours\"\r\n              type=\"number\"\r\n              InputProps={{ inputProps: { min: 0, max: 99 } }}\r\n              variant=\"outlined\"\r\n              onChange={this.hourHandler.bind(this)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              id=\"build-minutes\"\r\n              label=\"Minutes\"\r\n              type=\"number\"\r\n              InputProps={{ inputProps: { min: 0, max: 59 } }}\r\n              variant=\"outlined\"\r\n              onChange={this.minuteHandler.bind(this)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"build-filter-label\">Build filter</InputLabel>\r\n              <Select\r\n                labelId=\"build-filter\"\r\n                id=\"select-build-filter\"\r\n                value={this.state.filter}\r\n                onChange={this.filterHandler.bind(this)}\r\n                variant=\"outlined\"\r\n              >\r\n                <MenuItem value=\"none\">No Filter</MenuItem>\r\n                <MenuItem value=\"light\">Light</MenuItem>\r\n                <MenuItem value=\"heavy\">Heavy</MenuItem>\r\n                <MenuItem value=\"aviation\">Special</MenuItem>\r\n                <MenuItem value=\"limited\">Event</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div>\r\n          {ships.map((ship, i) => (\r\n            <DisplayShipBuild key={\"ship-\" + i} ship={ship} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction filterShipBuild(ships, filter) {\r\n  const len = ships.length;\r\n  let output = [];\r\n  for (let i = 0; i < len; i++) {\r\n    const ship = ships[i];\r\n    const availablity = ship.construction.availableIn;\r\n    if (availablity[filter]) {\r\n      output.push(ship);\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction make2digits(time) {\r\n  if (time < 10) {\r\n    return \"0\" + time;\r\n  }\r\n  return \"\" + time;\r\n}\r\n\r\nfunction constructionTime(hours, minutes, seconds) {\r\n  const hh = make2digits(hours);\r\n  const mm = make2digits(minutes);\r\n  const ss = make2digits(seconds);\r\n  return `${hh}:${mm}:${ss}`;\r\n}\r\n\r\nfunction timeStr2Minutes(timeStr) {\r\n  const splitTime = timeStr.split(\":\");\r\n  const hours = 60 * parseInt(splitTime[0]);\r\n  const mins = parseInt(splitTime[1]);\r\n  const secs = parseInt(splitTime[2]) / 60;\r\n  return hours + mins + secs;\r\n}\r\n\r\n/**\r\n * returns time between time1 and 2\r\n * @param {string} time1\r\n * @param {string} time2\r\n */\r\nfunction timeBetween(time1, time2) {\r\n  const mins1 = timeStr2Minutes(time1);\r\n  const mins2 = timeStr2Minutes(time2);\r\n  return Math.abs(mins1 - mins2);\r\n}\r\n\r\n/**\r\n * checks if time 2 is within the \"span\" minutes of time 1\r\n * returns a boolean\r\n * @param {string} time1\r\n * @param {string} time2\r\n * @param {number} span\r\n */\r\nfunction isTimeWithin(time1, time2, span) {\r\n  const diff = timeBetween(time1, time2);\r\n  return diff < span;\r\n}\r\n\r\nexport default Build;\r\n","import React, { useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { shipInfoURL } from '../../global';\r\nimport { Paper, Grid, GridListTile, Typography } from '@material-ui/core';\r\nimport { shipContext } from '../../App';\r\nimport FuzzySearch from 'fuzzy-search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Ship as ShipType, Skill } from '../../types/shipTypes';\r\nimport { shipContextType } from '../../types/miscType';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layer: {\r\n        padding: 'auto',\r\n        height: '100%',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    section: {\r\n        marginBottom: '1vh',\r\n    },\r\n    title: {\r\n        padding: 'auto',\r\n        height: '100%',\r\n        width: '95%',\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    main: {\r\n        padding: '0 1vw',\r\n    },\r\n}));\r\n\r\nfunction isNumeric(s) {\r\n    return !isNaN(s - parseFloat(s));\r\n}\r\n\r\nfunction fixSkillIconLink(shipId, link) {\r\n    const keyWord = 'skills/';\r\n    const parts = link.split(keyWord);\r\n    const inject = keyWord + shipId + '/';\r\n    if (parts && parts.length == 2) {\r\n        if (!isNumeric(parts[1].charAt(0))) {\r\n            //needs fixing\r\n            return parts[0] + inject + parts[1];\r\n        }\r\n    }\r\n    //if problem or no fix needed send normal link\r\n    return link;\r\n}\r\n\r\nexport interface ShipParams {\r\n    name: string;\r\n    code: string;\r\n}\r\n\r\nfunction Ship() {\r\n    const classes = useStyles();\r\n    const context: shipContextType = useContext(shipContext);\r\n    const { name, code } = useParams<ShipParams>();\r\n    if (!name) {\r\n        return null;\r\n    }\r\n\r\n    const results = context.byNameSearcher.search(name);\r\n\r\n    if (results.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    let ship: ShipType = results[0];\r\n\r\n    if (!!code) {\r\n        for (let i = 0; i < results.length; i++) {\r\n            const peekShip = results[i];\r\n            if (peekShip.names.code === code) {\r\n                ship = peekShip;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <Grid\r\n                container\r\n                spacing={3}\r\n                alignItems={'stretch'}\r\n                justify={'center'}\r\n                className={classes.section}\r\n            >\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <img\r\n                            src={ship.thumbnail}\r\n                            width=\"166px\"\r\n                            height=\"166px\"\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    container\r\n                    spacing={1}\r\n                    item\r\n                    xs={8}\r\n                    alignItems={'stretch'}\r\n                    direction={'row'}\r\n                    justify={'space-evenly'}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.layer}>\r\n                            <Typography component=\"h4\" variant=\"h4\">\r\n                                {nameSelector(ship)}\r\n                            </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.layer}>\r\n                            <Typography component=\"h4\" variant=\"h4\">\r\n                                {ship.names.code}\r\n                            </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div id={'ship-skills'}>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                    alignItems={'stretch'}\r\n                    justify={'center'}\r\n                    className={classes.section}\r\n                >\r\n                    <Paper className={classes.title}>\r\n                        <Typography component=\"h3\" variant=\"h3\">\r\n                            Skills\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                {ship.skills.map((skill, i) => (\r\n                    <Grid\r\n                        container\r\n                        spacing={3}\r\n                        alignItems={'stretch'}\r\n                        justify={'center'}\r\n                        className={classes.section}\r\n                    >\r\n                        <Grid item xs={3}>\r\n                            <Paper>\r\n                                <img\r\n                                    src={fixSkillIconLink(ship.id, skill.icon)}\r\n                                    width=\"128px\"\r\n                                    height=\"128px\"\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Paper\r\n                                className={classes.layer}\r\n                                style={{\r\n                                    backgroundColor: skill.color,\r\n                                }}\r\n                            >\r\n                                <Typography component=\"h5\" variant=\"h5\">\r\n                                    {skill.names.en ||\r\n                                        skill.names.jp ||\r\n                                        skill.names.cn ||\r\n                                        skill.names.kr ||\r\n                                        'No name?'}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.layer}>\r\n                                <Typography component=\"p\" variant=\"body1\">\r\n                                    {skill.description}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ship;\r\n\r\nfunction nameSelector(ship: ShipType) {\r\n    //Dragon Empery\r\n    //Sakura Empire\r\n    switch (ship.nationality.toLowerCase()) {\r\n        case 'sakura empire':\r\n            return ship.names.jp || ship.names.en;\r\n        case 'dragon empery':\r\n            return ship.names.cn || ship.names.en;\r\n        default:\r\n            return ship.names.en;\r\n    }\r\n}\r\n","import React, { useState, useContext, useCallback } from 'react';\r\nimport Axios from 'axios';\r\nimport { shipInfoURL } from '../../global';\r\nimport { Paper, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport {shipContext} from '../../App';\r\nimport { useEffect } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport DisplayShipBuild from '../build/ShipBuildCard';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ShipParams } from './Ship';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        padding: '0 1vw',\r\n    }\r\n}));\r\n\r\nfunction ShipSearch() {\r\n    const context = useContext(shipContext);\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { name } = useParams<ShipParams>();\r\n    const [query, setQuery] = useState(name || \"\");\r\n\r\n    const [ships, setShips] = useState([]);\r\n\r\n    const delayedSearch = useCallback(debounce(name => {\r\n        if(name){\r\n            const shipList = context.byNameSearcher.search(name)\r\n            setShips(shipList);\r\n        } else{\r\n            setShips([]);\r\n        }\r\n        history.push(`/ships/${name}`);\r\n    }, 500), []);\r\n\r\n    useEffect(() => {\r\n        delayedSearch(query);\r\n     \r\n        // Cancel the debounce on useEffect cleanup.\r\n        return delayedSearch.cancel;\r\n     }, [query, delayedSearch]);\r\n    \r\n    return (\r\n        <div className={classes.main}>\r\n            <h1>\r\n                Enter ship name\r\n            </h1>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"search4ship\"\r\n                        label=\"Ship name\"\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => setQuery(event.target.value)}\r\n                        value={query}\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n                {ships.map((ship, i) => <DisplayShipBuild key={\"ship-\" + i} ship={ship} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShipSearch;","import React from 'react';\r\nimport {Grid, Button, makeStyles} from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navbar: {\r\n        padding: '0 1vw',\r\n        width: '100vw'\r\n    }\r\n}));\r\n\r\nconst deployedBase: string = '/azur-nugget';\r\n\r\nfunction sendToPage(history, path: string) {\r\n    const currentPath: string = history.location.pathname;\r\n    const splitPath: string[] = currentPath.split('/');\r\n    const basePath = splitPath[0];\r\n    if(basePath.startsWith(deployedBase)){\r\n        return () => history.push(`${deployedBase}/${path}`);\r\n    } else {\r\n        return () => history.push(`/${path}`);\r\n    }\r\n}\r\n\r\nfunction NavBar(){\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    return(\r\n        <Grid container spacing={2} alignItems='center' className={classes.navbar}>\r\n            <Grid item xs>\r\n                <Button onClick={sendToPage(history, '')}>\r\n                    Home\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Button onClick={sendToPage(history, 'ships')}>\r\n                    Ships\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Button onClick={sendToPage(history, 'build')}>\r\n                    Build time\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Button onClick={sendToPage(history, 'rate')}>\r\n                    Build rate\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Button onClick={sendToPage(history, 'juust')}>\r\n                    Juust\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nfunction JuustReply({data}){\r\n    const poster = data.name;\r\n    const icon = data.icon;\r\n    const post = data.post;\r\n    const replies = (typeof data.replies === 'undefined') ? [] : data.replies;\r\n    return(\r\n        <div className=\"juust-reply\">\r\n            <div className=\"juust-reply-main\">\r\n                {poster}\r\n            </div>\r\n            <div className=\"juust-reply-content\">\r\n                {post}\r\n            </div>\r\n            <div className=\"juust-subreply\">\r\n                {replies.map(\r\n                    (reply, i) => <JuustReply data={reply} key={\"reply-\" + poster + i} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuustReply;","import React from 'react';\r\nimport JuustReply from './JuustReply';\r\n\r\nfunction JuustPost({data}){\r\n    const replies = data.replies;\r\n    const picSrc = data.picture;\r\n    const text = data.post;\r\n    const poster = data.name;\r\n    return(\r\n        <div className=\"juust-post\">\r\n            <div className=\"juust-main\">\r\n                <div className=\"juust-name\">\r\n                    {poster}\r\n                </div>\r\n                <div className=\"juust-text\">\r\n                    {text}\r\n                </div>\r\n                <div className=\"juust-pic\">\r\n                    <img src={picSrc} />\r\n                </div>\r\n            </div>\r\n            <div className=\"juust-replies\">\r\n                {replies.map(\r\n                    (reply, i) => <JuustReply data={reply} key={\"comment-\" + poster + i} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuustPost;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport JuustPost from './JuustPost';\r\nimport {nimiSocial} from '../../global';\r\nimport {Button} from '@material-ui/core';\r\n\r\nconst loadMoreBy = 5;\r\n\r\nclass Juustagram extends React.Component<{}, any, any>{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            limit: 5\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const that = this;\r\n        Axios.get(nimiSocial).then(\r\n            function(resp){\r\n                const data = resp.data.entries;// everything in entries\r\n                that.setState({\r\n                    data: data\r\n                });\r\n            }\r\n        ).catch(\r\n            function(){\r\n                console.error(\"Problem loading Jusstagram\");\r\n            }\r\n        );\r\n    }\r\n\r\n    loadMore(){\r\n        const newLimit = this.state.limit + loadMoreBy;\r\n        this.setState({\r\n            limit: newLimit\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let posts = [];\r\n        const data = this.state.data;\r\n        const limit = this.state.limit;\r\n        if(data){\r\n            posts = data.slice(0, limit);\r\n        }\r\n        return(\r\n            <div className=\"juustagram\">     \r\n                <div className=\"juustagram-posts\">\r\n                    {posts.map(\r\n                        (post, i) => <JuustPost data={post} key={\"post-\" + i} />\r\n                    )}\r\n                </div>\r\n                <div className=\"extra-top-margin extra-bottom-margin\">\r\n                        <Button variant='outlined' onClick={this.loadMore.bind(this)}>\r\n                            Load more\r\n                        </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Juustagram;","import React from 'react';\r\n\r\nfunction Home(){\r\n    return(\r\n        <div>\r\n            <h1>\r\n                Azur Nugget\r\n            </h1>\r\n            <p>\r\n                This is still work in progress.\r\n                You can navigate using the nav bar on top.\r\n            </p>\r\n            <p>\r\n                Uses AzurAPI and nimii.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Slider, Grid, makeStyles, TextField, InputAdornment } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layer: {\r\n        padding: 'auto',\r\n        height: '100%',\r\n        margin: 'auto',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    section: {\r\n        marginBottom: '1vh'\r\n    },\r\n    title: {\r\n        marginBottom: '3%'\r\n    },\r\n    main: {\r\n        padding: '1vw',\r\n    },\r\n    chart: {\r\n        padding: '0 5vh',\r\n        overflowX: 'hidden'\r\n    }\r\n}));\r\n\r\nconst minBuild = 0;\r\nconst maxBuild = 600;\r\n\r\nconst chartOptions = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n        yAxes: [{\r\n            scaleLabel: {\r\n                display: true,\r\n                labelString: \"Chance to get at least one ship\"\r\n            },\r\n            ticks: {\r\n                callback: (value, index, values) => {\r\n                    return chanceToPercent(value);\r\n                }\r\n            }\r\n        }],\r\n        xAxes: [{\r\n            scaleLabel: {\r\n                display: true,\r\n                labelString: \"Number of builds\"\r\n            }\r\n        }]\r\n    },\r\n    tooltips: {\r\n        callbacks: {\r\n            label: function(tooltipItem, data) {\r\n                var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                if (label) {\r\n                    label += ' = ';\r\n                }\r\n\r\n                label += chanceToPercent(tooltipItem.yLabel, 2);\r\n                return label;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction BuildRate() {\r\n    const classes = useStyles();\r\n\r\n    const [pulls, setPulls] = useState(100);\r\n    const [buildRate, setBuildRate] = useState(2);\r\n    //buildrate is %, buildchance is decimal\r\n    const buildChance = percentToChance(buildRate);\r\n    const xVals = generateNumbers(pulls);\r\n    const formula = (n: number) => chanceFormula(buildChance, n);\r\n    const yVals = applyFormula(xVals, formula) as number[];\r\n    const data = {\r\n        labels: xVals,\r\n        datasets: [{\r\n            label: `Chance of getting a ship of rate ${buildRate}%`,\r\n            data: yVals\r\n        }]\r\n    };\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setPulls(newValue);\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setPulls(event.target.value);\r\n    }\r\n\r\n    const handleRateChange = (event) => {\r\n        setBuildRate(event.target.value);\r\n    }\r\n\r\n    const chartHeight = getVH(60);\r\n    const chartWidth = getVW(90);\r\n\r\n    return <div className={classes.main}>\r\n        <h1 className={classes.title}>\r\n            Chance to get at least one rate up ship\r\n        </h1>\r\n        <Grid\r\n            container\r\n            spacing={3}\r\n            alignItems={\"stretch\"}\r\n            justify={\"center\"}\r\n        >\r\n            <Grid item xs={5}>\r\n                <Slider\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    value={pulls}\r\n                    onChange={handleSliderChange}\r\n                    step={1}\r\n                    marks\r\n                    min={minBuild}\r\n                    max={maxBuild}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <TextField\r\n                    label={\"Number of builds\"}\r\n                    type={\"number\"}\r\n                    variant={\"outlined\"}\r\n                    value={pulls}\r\n                    onChange={handleInputChange}\r\n                    InputProps={{ inputProps: { min: minBuild } }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <TextField\r\n                    label={\"Build rate\"}\r\n                    type={\"number\"}\r\n                    variant={\"outlined\"}\r\n                    value={buildRate}\r\n                    InputProps={{\r\n                        inputProps: { min: 0, max: 100, step: 0.5 },\r\n                        endAdornment: <InputAdornment position=\"end\">%</InputAdornment>\r\n                    }}\r\n                    onChange={handleRateChange}\r\n\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n        <div className={classes.chart}>\r\n            <Line data={data} options={chartOptions} width={chartWidth} height={chartHeight} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction getVW(percent: number): number {\r\n    let width: number;\r\n    if (window.innerWidth !== undefined) {\r\n        width = window.innerWidth;\r\n    } else {\r\n        width = document.documentElement.clientWidth;\r\n    }\r\n    return width * percent / 100;\r\n}\r\n\r\nfunction getVH(percent: number): number {\r\n    let height: number;\r\n    if (window.innerHeight !== undefined) {\r\n        height = window.innerHeight;\r\n    } else {\r\n        height = document.documentElement.clientHeight;\r\n    }\r\n    return height * percent / 100;\r\n}\r\n\r\nfunction chanceToPercent(chance: number, dp : number | null = null) {\r\n    let percent : string | number = chance * 100;\r\n    if(dp !== null){\r\n        percent = percent.toFixed(dp);\r\n        if(parseFloat(percent) >= 100){\r\n            percent = 'almost 100';\r\n        }\r\n    }\r\n    return `${percent}%`;\r\n}\r\n\r\nfunction percentToChance(percent: string | number) {\r\n    const number = parseFloat(percent + \"\");\r\n    return number / 100;\r\n}\r\n\r\nfunction applyFormula(values: number[], formula: Function) {\r\n    const results = new Array<any>();\r\n    values.forEach(value => {\r\n        const ans = formula(value);\r\n        results.push(ans);\r\n    });\r\n    return results;\r\n}\r\n\r\nfunction generateNumbers(length: number): Array<number> {\r\n    if (length <= 0) {\r\n        return [];\r\n    }\r\n    const array = new Array<number>();\r\n    for (let i = 0; i < length; i++) {\r\n        array.push(i);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction chanceFormula(rate: number, times: number): number {\r\n    return 1 - Math.pow(1 - rate, times);\r\n}\r\n\r\nexport default BuildRate;","import React, { createContext, useEffect, useState } from \"react\";\r\nimport Build from \"./pages/build/Build\";\r\nimport Ship from \"./pages/ship/Ship\";\r\nimport ShipSearch from \"./pages/ship/ShipSearch\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport Juustagram from \"./pages/juust/Juustagram\";\r\nimport Axios from 'axios';\r\nimport { shipInfoURL } from './global';\r\nimport FuzzySearch from 'fuzzy-search';\r\n\r\nimport \"./App.css\";\r\nimport Home from \"./Home\";\r\nimport { shipContextType } from \"./types/miscType\";\r\nimport BuildRate from \"./pages/rate/BuildRate\";\r\n\r\nconst shipContextDefaultData : shipContextType = {\r\n    ships: []\r\n} as shipContextType;\r\n\r\nexport const shipContext = createContext(shipContextDefaultData);\r\n\r\nconst searcherOptions = {\r\n    sort: true,\r\n    caseSensitive: false\r\n};\r\n\r\nconst searchByNameConfig = [\r\n    'names.code', \r\n    'names.en', \r\n    'names.jp', \r\n    'names.cn'\r\n];\r\n\r\nfunction App() {\r\n    const [ships, setShips] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        Axios.get(shipInfoURL)\r\n            .then(\r\n                function (resp) {\r\n                    const data = resp.data;\r\n                    setShips({\r\n                        ships: data,\r\n                        byNameSearcher: new FuzzySearch(data, searchByNameConfig, searcherOptions)\r\n                    });\r\n                }\r\n            ).catch(\r\n                function () {\r\n                    console.error(\"shipInfoURL fetch error\");\r\n                }\r\n            )\r\n    }, []);\r\n\r\n    if (!ships) {\r\n        console.log(\"no data\");\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <shipContext.Provider value={ships}>\r\n            <BrowserRouter>\r\n                <NavBar />\r\n                <div className=\"App\">\r\n                    <Route path=\"/build\" render={(props) => (\r\n                        <Build {...props} ships={ships.ships} />\r\n                    )} />\r\n                    <Route path=\"/juust\" component={Juustagram} />\r\n                    <Route path=\"/rate\" component={BuildRate} />\r\n                    <Route exact path=\"/ship/:name/:code?\" component={Ship} />\r\n                    <Route path=\"/ships/:name?\" component={ShipSearch} />\r\n                    <Route exact path=\"/\" component={Home} />\r\n                </div>\r\n            </BrowserRouter>\r\n        </shipContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}